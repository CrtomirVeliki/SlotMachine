{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://slotmachine/webpack/bootstrap","webpack://slotmachine/webpack/runtime/global","webpack://slotmachine/webpack/runtime/publicPath","webpack://slotmachine/./src/playGame.js","webpack://slotmachine/./src/preloadGame.js","webpack://slotmachine/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import symbol1 from '../images/sedem.png';\nimport symbol2 from '../images/banana.png';\nimport symbol3 from '../images/lubenica.png';\nimport symbol4 from '../images/limona.png';\nimport symbol5 from '../images/bar.png';\n\n\nexport default class playGame extends Phaser.Scene {\n    constructor() {\n        super(\"PlayGame\" );\n        this.winText = null;\n    }\n\n    preload() {\n        // Load symbols for the reels\n        this.load.image(\"symbol1\", symbol1);\n        this.load.image(\"symbol2\", symbol2);\n        this.load.image(\"symbol3\", symbol3);\n        this.load.image(\"symbol4\", symbol4);\n        this.load.image(\"symbol5\", symbol5);\n    }\n\n    create() {\n      \n        // Set up the 3x3 grid \n        this.createReels();\n        this.createSpinButton();\n    }\n\n    createReels() {\n        // Create a 3x3 grid for symbols\n        this.reels = [];\n\n        const startX = 330;\n        const startY = 200;\n        const reelWidth = 75;\n        const reelHeight = 75;\n\n        for (let row = 0; row < 3; row++) {\n            this.reels[row] = [];\n            for (let col = 0; col < 3; col++) {\n                const symbol = this.add.sprite(\n                    startX + col * reelWidth,\n                    startY + row * reelHeight,\n                    \"symbol1\"\n                );\n                this.reels[row][col] = symbol;\n            }\n        }\n    }\n\n    createSpinButton() {\n        // Create a spin button\n        const spinButton = this.add.text(365, 450, \"SPIN\", {\n            fontSize: \"32px\",\n            color: \"#fff\",\n        }).setInteractive();\n\n        spinButton.on(\"pointerdown\", () => {\n            this.spinReels();\n        });\n    }\n\n    spinReels() {\n        this.clearWinText();\n        // Start spinning the reels\n        const symbols = [\"symbol1\", \"symbol2\", \"symbol3\", \"symbol4\", \"symbol5\"];\n        for (let row = 0; row < 3; row++) {\n            for (let col = 0; col < 3; col++) {\n                // Randomize the symbol for each reel\n                const randomSymbol = Phaser.Math.Between(0, symbols.length - 1);\n                this.reels[row][col].setTexture(symbols[randomSymbol]);\n            }\n        }\n\n        // Check if the player wins\n        this.checkWinCondition();\n    }\n\n    checkWinCondition() {\n        let win = false;\n\n        // Loop through rows\n        for (let row = 0; row < 3; row++) {\n            const firstSymbol = this.reels[row][0].texture.key;\n            win = true;\n\n            // Check if symbols  match\n            for (let col = 1; col < 3; col++) {\n                if (this.reels[row][col].texture.key !== firstSymbol) {\n                    win = false;\n                    break;\n                }\n            }\n\n            // If a win, exit the loop\n            if (win) {\n                this.displayWinText(\"You Win!\");\n                break;\n            }\n        }\n\n        if (!win) {\n            this.displayWinText(\"No Win!\");\n        }\n    }\n\n    // Display win/no-win text\n    displayWinText(message) {\n        // Remove text if it exists\n        if (this.winText) {\n            this.winText.destroy();\n        }\n\n        // Display the new win/no-win message\n        this.winText = this.add.text(330, 400, message, { fontSize: \"32px\", color: message === \"You Win!\" ? \"#c9ff00\" : \"#0f00ff\" });\n    }\n\n    // Clear text before the next spin\n    clearWinText() {\n        if (this.winText) {\n            this.winText.destroy();\n            this.winText = null; // Reset reference to null\n        }\n    }\n}\n\n\n","\nexport default class preloadGame extends Phaser.Scene{\n    constructor(){\n      super(\"PreloadGame\");\n    }\n    preload(){\n      \n      \n    }\n    create(){\n      this.scene.start(\"PlayGame\");\n    }\n}\n","import playGame from './playGame';\nimport preloadGame from './preloadGame';\n\n\nvar game;\nwindow.onload = function(){\n  let gameConfig = {\n    type: Phaser.CANVAS,\n    width: 800,\n    height: 600,\n    pixelArt: true,\n    physics: {\n      default: \"arcade\",\n      arcade: {\n          gravity: {\n            y: 0\n          }\n      }\n    },\n    scene: [preloadGame, playGame]\n  }\n  game = new Phaser.Game(gameConfig);\n}\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","playGame","_this","_classCallCheck","_callSuper","winText","_inherits","Phaser","Scene","key","value","load","image","symbol1","symbol2","symbol3","symbol4","symbol5","createReels","createSpinButton","reels","row","col","symbol","add","sprite","_this2","text","fontSize","color","setInteractive","on","spinReels","clearWinText","symbols","randomSymbol","Math","Between","setTexture","checkWinCondition","win","firstSymbol","texture","displayWinText","message","destroy","preloadGame","scene","start","onload","gameConfig","type","CANVAS","width","height","pixelArt","physics","default","arcade","gravity","y","Game"],"sourceRoot":""}